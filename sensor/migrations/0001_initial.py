# Generated by Django 4.2.7 on 2025-08-07 08:59

from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='Sensor',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('sensor_id', models.CharField(max_length=50, unique=True)),
                ('name', models.CharField(max_length=100)),
                ('location', models.CharField(max_length=200)),
                ('depth', models.FloatField(blank=True, null=True)),
                ('status', models.CharField(choices=[('active', 'Faol'), ('inactive', 'Nofaol'), ('maintenance', 'Kalibrlash'), ('error', 'Xato')], default='active', max_length=20)),
                ('last_updated', models.DateTimeField(auto_now=True)),
                ('is_critical', models.BooleanField(default=False)),
            ],
        ),
        migrations.CreateModel(
            name='SensorType',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100)),
                ('unit', models.CharField(max_length=20)),
                ('description', models.TextField(blank=True)),
                ('icon', models.CharField(default='ðŸ“¡', max_length=50)),
            ],
        ),
        migrations.CreateModel(
            name='SystemStatus',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('status', models.CharField(choices=[('active', 'FAOL'), ('maintenance', 'TEXNIK_XIZMAT'), ('error', 'XATO'), ('offline', 'OFLAYN')], default='active', max_length=20)),
                ('cpu_usage', models.FloatField(default=0)),
                ('memory_usage', models.FloatField(default=0)),
                ('disk_usage', models.FloatField(default=0)),
                ('internet_connectivity', models.FloatField(default=100)),
                ('active_sensors', models.IntegerField(default=0)),
                ('last_ai_analysis', models.DateTimeField(blank=True, null=True)),
                ('timestamp', models.DateTimeField(default=django.utils.timezone.now)),
            ],
            options={
                'ordering': ['-timestamp'],
            },
        ),
        migrations.CreateModel(
            name='WeatherData',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('location', models.CharField(default='Tashkent', max_length=100)),
                ('temperature', models.FloatField()),
                ('humidity', models.FloatField()),
                ('pressure', models.FloatField()),
                ('wind_speed', models.FloatField()),
                ('wind_direction', models.CharField(max_length=20)),
                ('rainfall', models.FloatField(default=0)),
                ('solar_radiation', models.FloatField(blank=True, null=True)),
                ('weather_condition', models.CharField(max_length=100)),
                ('icon', models.CharField(max_length=10)),
                ('timestamp', models.DateTimeField(default=django.utils.timezone.now)),
            ],
            options={
                'ordering': ['-timestamp'],
            },
        ),
        migrations.CreateModel(
            name='SensorReading',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('value', models.FloatField()),
                ('timestamp', models.DateTimeField(default=django.utils.timezone.now)),
                ('is_anomaly', models.BooleanField(default=False)),
                ('sensor', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='readings', to='sensor.sensor')),
            ],
            options={
                'ordering': ['-timestamp'],
            },
        ),
        migrations.AddField(
            model_name='sensor',
            name='sensor_type',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='sensor.sensortype'),
        ),
    ]
