# Generated by Django 4.2.7 on 2025-08-07 08:59

from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='AIAnalysisSession',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('session_id', models.CharField(max_length=50, unique=True)),
                ('session_type', models.CharField(choices=[('routine', 'Muntazam Tahlil'), ('triggered', 'Avtomatik Ishga Tushgan'), ('manual', "Qo'lda Boshlangan"), ('emergency', 'Favqulodda')], max_length=20)),
                ('status', models.CharField(choices=[('running', 'Davom etmoqda'), ('completed', 'Yakunlangan'), ('failed', 'Muvaffaqiyatsiz'), ('cancelled', 'Bekor qilingan')], default='running', max_length=20)),
                ('input_sensors', models.JSONField()),
                ('weather_data', models.JSONField(blank=True, null=True)),
                ('plant_data', models.JSONField(blank=True, null=True)),
                ('predictions_generated', models.IntegerField(default=0)),
                ('recommendations', models.JSONField(default=list)),
                ('critical_alerts', models.JSONField(default=list)),
                ('processing_time_seconds', models.FloatField(blank=True, null=True)),
                ('cpu_usage_peak', models.FloatField(blank=True, null=True)),
                ('memory_usage_peak', models.FloatField(blank=True, null=True)),
                ('started_at', models.DateTimeField(default=django.utils.timezone.now)),
                ('completed_at', models.DateTimeField(blank=True, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='AIInsight',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('insight_type', models.CharField(choices=[('pattern_discovery', 'Naqsh Kashfiyoti'), ('optimization_opportunity', 'Optimizatsiya Imkoniyati'), ('risk_assessment', 'Xavf Baholash'), ('trend_analysis', 'Trend Tahlili'), ('correlation_finding', 'Korrelyatsiya Topish')], max_length=30)),
                ('title', models.CharField(max_length=200)),
                ('description', models.TextField()),
                ('supporting_data', models.JSONField()),
                ('statistical_significance', models.FloatField(blank=True, null=True)),
                ('confidence_level', models.FloatField(default=0.0)),
                ('importance_level', models.CharField(choices=[('low', 'Past'), ('medium', "O'rtacha"), ('high', 'Yuqori'), ('critical', 'Kritik')], max_length=20)),
                ('tags', models.JSONField(default=list)),
                ('recommended_actions', models.JSONField(default=list)),
                ('potential_impact', models.TextField(blank=True)),
                ('is_implemented', models.BooleanField(default=False)),
                ('implementation_date', models.DateTimeField(blank=True, null=True)),
                ('outcome_rating', models.IntegerField(blank=True, null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
            ],
        ),
        migrations.CreateModel(
            name='AILearningData',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('source_type', models.CharField(choices=[('sensors', 'Datchiklar'), ('weather', 'Ob-havo'), ('irrigation', "Sug'orish"), ('plant_growth', "O'simlik O'sishi"), ('user_feedback', 'Foydalanuvchi Fikri')], max_length=20)),
                ('data_point', models.JSONField()),
                ('quality_score', models.FloatField(default=1.0)),
                ('is_anomaly', models.BooleanField(default=False)),
                ('is_validated', models.BooleanField(default=False)),
                ('used_for_training', models.BooleanField(default=False)),
                ('training_weight', models.FloatField(default=1.0)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
            ],
        ),
        migrations.CreateModel(
            name='AIModel',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100)),
                ('model_type', models.CharField(choices=[('irrigation_predictor', "Sug'orish Bashoratchi"), ('plant_health', "O'simlik Sog'ligi"), ('weather_analyzer', 'Ob-havo Tahlilchi'), ('water_optimizer', 'Suv Optimizatori')], max_length=30)),
                ('version', models.CharField(default='1.0.0', max_length=20)),
                ('description', models.TextField(blank=True)),
                ('accuracy', models.FloatField(default=0.0)),
                ('precision', models.FloatField(default=0.0)),
                ('recall', models.FloatField(default=0.0)),
                ('f1_score', models.FloatField(default=0.0)),
                ('training_data_count', models.IntegerField(default=0)),
                ('last_trained', models.DateTimeField(blank=True, null=True)),
                ('is_active', models.BooleanField(default=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
            ],
        ),
        migrations.CreateModel(
            name='AIPrediction',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('prediction_type', models.CharField(choices=[('irrigation_need', "Sug'orish Zaruriyati"), ('optimal_timing', 'Optimal Vaqt'), ('water_amount', 'Suv Miqdori'), ('plant_health_risk', "O'simlik Sog'ligi Xavfi"), ('weather_impact', "Ob-havo Ta'siri"), ('pest_detection', 'Zararkunanda Aniqlash')], max_length=30)),
                ('input_data', models.JSONField()),
                ('prediction_value', models.FloatField()),
                ('confidence_score', models.FloatField()),
                ('confidence_level', models.CharField(choices=[('very_low', 'Juda Past'), ('low', 'Past'), ('medium', "O'rtacha"), ('high', 'Yuqori'), ('very_high', 'Juda Yuqori')], max_length=20)),
                ('recommendation', models.TextField()),
                ('reasoning', models.TextField(blank=True)),
                ('alternative_actions', models.JSONField(default=dict)),
                ('is_validated', models.BooleanField(default=False)),
                ('actual_outcome', models.FloatField(blank=True, null=True)),
                ('feedback_score', models.IntegerField(blank=True, null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('model', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='ai_engine.aimodel')),
            ],
        ),
    ]
